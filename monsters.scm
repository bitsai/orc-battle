(require "engine.scm")
(require "game.scm")
(require "util.scm")

(define-simple-class monster ()
  (health
   init-value: (randval 10))
  ((hit x)
   (swap! health - x)
   (if (monster-dead? (this))
       (output "You killed the " (type-of (this)) "!\n")
       (output "You hit the " (type-of (this)) ", knocking off " x " health points!\n")))
  ((show)
   (str "A fierce " (type-of (this))))
  ((attack)
   #!abstract))

(define-simple-class orc (monster)
  (club-level
   init-value: (randval 8))
  ((show)
   (str "A wicked orc with a level " club-level " club"))
  ((attack)
   (let ((x (randval club-level)))
     (output "An orc swings his club at you and knocks off " x " of your health points!\n")
     (swap! *player-health* - x))))

(define-simple-class hydra (monster)
  ((show)
   (str "A malicious hydra with " health " heads"))
  ((hit x)
   (swap! health - x)
   (if (monster-dead? (this))
       (output "The corpse of the fully decapitated and decapacitated hydra falls to the floor!\n")
       (output "You knock off " x " of the hydra's heads!\n")))
  ((attack)
   (let ((x (randval (quotient health 2))))
     (output "A hydra attacks you with " x " of its heads! It also grows back 1 more head!\n")
     (swap! health inc)
     (swap! *player-health* - x)
     )))

(define-simple-class slime (monster)
  (sliminess
   init-value: (randval 5))
  ((show)
   (str "A slime with a sliminess of " sliminess))
  ((attack)
   (let ((x (randval sliminess)))
     (output "A slime wraps around your legs and decreases your agility by " x "!\n")
     (swap! *player-agility* - x)
     (when (zero? (rand-int 2))
       (output "It also squirts in your face, taking away 1 health point!\n")
       (swap! *player-health* dec)))))

(define-simple-class brigand (monster)
  ((attack)
   (let ((x (max *player-health* *player-agility* *player-strength*)))
     (cond ((= x *player-health*)
            (output "A brigand hits you with his slingshot, taking off 2 health points!\n")
	    (swap! *player-health* - 2))
	   ((= x *player-agility*)
            (output "A brigand catches your leg with his whip, taking off 2 agility points!\n")
	    (swap! *player-agility* - 2))
	   ((= x *player-strength*)
            (output "A brigand cuts your arm with his whip, taking off 2 strength points!\n")
	    (swap! *player-strength* - 2))))))
